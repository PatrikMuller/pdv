// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using pdvInfraestrutura.Database;

namespace pdvInfraestrutura.Migrations
{
    [DbContext(typeof(pdvContext))]
    partial class pdvContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("pdvInfraestrutura.Model.Author", b =>
                {
                    b.Property<int>("AuthorId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.HasKey("AuthorId");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("pdvInfraestrutura.Model.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AuthorId");

                    b.Property<string>("Title");

                    b.HasKey("BookId");

                    b.HasIndex("AuthorId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("pdvInfraestrutura.Model.Carrinho", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DataAbertura");

                    b.Property<DateTime?>("DataFechamento");

                    b.Property<string>("LoginUsuarioAbertura");

                    b.Property<string>("LoginUsuarioFechamento");

                    b.HasKey("Id");

                    b.ToTable("Carrinhos");
                });

            modelBuilder.Entity("pdvInfraestrutura.Model.CarrinhoFormaPagamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CarrinhoId");

                    b.Property<int?>("FormaPagamentoId");

                    b.Property<double>("Juros");

                    b.Property<int>("QtdParcelas");

                    b.Property<double>("ValorPagar");

                    b.Property<double>("ValorParcela");

                    b.HasKey("Id");

                    b.HasIndex("CarrinhoId");

                    b.HasIndex("FormaPagamentoId");

                    b.ToTable("CarrinhoFormaPagamentos");
                });

            modelBuilder.Entity("pdvInfraestrutura.Model.CarrinhoItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CarrinhoId");

                    b.Property<double>("Desconto");

                    b.Property<int?>("ItemId");

                    b.Property<int>("Ordem");

                    b.Property<double>("Preco");

                    b.Property<double>("Quantidade");

                    b.HasKey("Id");

                    b.HasIndex("CarrinhoId");

                    b.HasIndex("ItemId");

                    b.ToTable("CarrinhoItems");
                });

            modelBuilder.Entity("pdvInfraestrutura.Model.CarrinhoPessoa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CarrinhoId");

                    b.Property<int?>("CarrinhoPessoaTipoId");

                    b.Property<int?>("PessoaId");

                    b.HasKey("Id");

                    b.HasIndex("CarrinhoId");

                    b.HasIndex("CarrinhoPessoaTipoId");

                    b.HasIndex("PessoaId");

                    b.ToTable("CarrinhoPessoas");
                });

            modelBuilder.Entity("pdvInfraestrutura.Model.CarrinhoPessoaTipo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descricao");

                    b.HasKey("Id");

                    b.ToTable("CarrinhoPessoaTipos");
                });

            modelBuilder.Entity("pdvInfraestrutura.Model.Fabricante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descricao");

                    b.HasKey("Id");

                    b.ToTable("Fabricantes");
                });

            modelBuilder.Entity("pdvInfraestrutura.Model.FormaPagamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descricao");

                    b.HasKey("Id");

                    b.ToTable("FormaPagamentos");
                });

            modelBuilder.Entity("pdvInfraestrutura.Model.FormaPagamentoParcelamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("FormaPagamentoId");

                    b.Property<double>("Juros");

                    b.Property<int?>("ParcelamentoStatusId");

                    b.Property<int>("QtdParcelas");

                    b.HasKey("Id");

                    b.HasIndex("FormaPagamentoId");

                    b.HasIndex("ParcelamentoStatusId");

                    b.ToTable("FormaPagamentoParcelamentos");
                });

            modelBuilder.Entity("pdvInfraestrutura.Model.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Desconto");

                    b.Property<int?>("FabricanteId");

                    b.Property<string>("Nome");

                    b.Property<double>("Preco");

                    b.Property<double>("Quantidade");

                    b.Property<int?>("UnidadeMedidaId");

                    b.HasKey("Id");

                    b.HasIndex("FabricanteId");

                    b.HasIndex("UnidadeMedidaId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("pdvInfraestrutura.Model.ParcelamentoStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descricao");

                    b.HasKey("Id");

                    b.ToTable("ParcelamentoStatuses");
                });

            modelBuilder.Entity("pdvInfraestrutura.Model.Pessoa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CpfCnpj");

                    b.Property<string>("Nome");

                    b.HasKey("Id");

                    b.ToTable("Pessoa");
                });

            modelBuilder.Entity("pdvInfraestrutura.Model.UnidadeMedida", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descricao");

                    b.Property<string>("Sigla");

                    b.HasKey("Id");

                    b.ToTable("UnidadeMedida");
                });

            modelBuilder.Entity("pdvInfraestrutura.Model.Book", b =>
                {
                    b.HasOne("pdvInfraestrutura.Model.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("pdvInfraestrutura.Model.CarrinhoFormaPagamento", b =>
                {
                    b.HasOne("pdvInfraestrutura.Model.Carrinho", "Carrinho")
                        .WithMany()
                        .HasForeignKey("CarrinhoId");

                    b.HasOne("pdvInfraestrutura.Model.FormaPagamento", "FormaPagamento")
                        .WithMany()
                        .HasForeignKey("FormaPagamentoId");
                });

            modelBuilder.Entity("pdvInfraestrutura.Model.CarrinhoItem", b =>
                {
                    b.HasOne("pdvInfraestrutura.Model.Carrinho", "Carrinho")
                        .WithMany()
                        .HasForeignKey("CarrinhoId");

                    b.HasOne("pdvInfraestrutura.Model.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId");
                });

            modelBuilder.Entity("pdvInfraestrutura.Model.CarrinhoPessoa", b =>
                {
                    b.HasOne("pdvInfraestrutura.Model.Carrinho", "Carrinho")
                        .WithMany()
                        .HasForeignKey("CarrinhoId");

                    b.HasOne("pdvInfraestrutura.Model.CarrinhoPessoaTipo", "CarrinhoPessoaTipo")
                        .WithMany()
                        .HasForeignKey("CarrinhoPessoaTipoId");

                    b.HasOne("pdvInfraestrutura.Model.Pessoa", "Pessoa")
                        .WithMany()
                        .HasForeignKey("PessoaId");
                });

            modelBuilder.Entity("pdvInfraestrutura.Model.FormaPagamentoParcelamento", b =>
                {
                    b.HasOne("pdvInfraestrutura.Model.FormaPagamento", "FormaPagamento")
                        .WithMany()
                        .HasForeignKey("FormaPagamentoId");

                    b.HasOne("pdvInfraestrutura.Model.ParcelamentoStatus", "ParcelamentoStatus")
                        .WithMany()
                        .HasForeignKey("ParcelamentoStatusId");
                });

            modelBuilder.Entity("pdvInfraestrutura.Model.Item", b =>
                {
                    b.HasOne("pdvInfraestrutura.Model.Fabricante", "Fabricante")
                        .WithMany()
                        .HasForeignKey("FabricanteId");

                    b.HasOne("pdvInfraestrutura.Model.UnidadeMedida", "UnidadeMedida")
                        .WithMany()
                        .HasForeignKey("UnidadeMedidaId");
                });
#pragma warning restore 612, 618
        }
    }
}
